"""Add api_identifier to CustomField

Revision ID: 3fc9ad7bae8a
Revises: e56274925960
Create Date: 2025-09-27 23:49:55.828528

"""
from alembic import op
import sqlalchemy as sa
import re

# revision identifiers, used by Alembic.
revision = '3fc9ad7bae8a'
down_revision = 'e56274925960'
branch_labels = None
depends_on = None

# הגדרת טבלה זמנית כדי שנוכל לקרוא ממנה נתונים
custom_field_table = sa.table('custom_field',
    sa.column('id', sa.Integer),
    sa.column('name', sa.String),
    sa.column('api_identifier', sa.String)
)

def upgrade():
    # שלב 1: הוסף את העמודה כמאפשרת ערכים ריקים (NULL)
    with op.batch_alter_table('custom_field', schema=None) as batch_op:
        batch_op.add_column(sa.Column('api_identifier', sa.String(length=100), nullable=True))

    # שלב 2: מלא את העמודה החדשה בערכים עבור כל השדות הקיימים
    bind = op.get_bind()
    session = sa.orm.Session(bind=bind)
    
    for field in session.query(custom_field_table).all():
        # יצירת מזהה ייחודי ונקי משם השדה
        temp_identifier = field.name.lower()
        temp_identifier = re.sub(r'\s+', '_', temp_identifier)
        api_id = f"custom_{re.sub(r'[^a-zA-Z0-9_]', '', temp_identifier)}_{field.id}"

        session.execute(
            custom_field_table.update().where(custom_field_table.c.id == field.id).values(api_identifier=api_id)
        )
    session.commit()

    # שלב 3: הפוך את העמודה לחובה (NOT NULL) והוסף אילוץ ייחודיות
    with op.batch_alter_table('custom_field', schema=None) as batch_op:
        batch_op.alter_column('api_identifier', nullable=False)
        batch_op.create_unique_constraint(batch_op.f('uq_custom_field_api_identifier'), ['api_identifier'])


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('custom_field', schema=None) as batch_op:
        batch_op.drop_constraint(batch_op.f('uq_custom_field_api_identifier'), type_='unique')
        batch_op.drop_column('api_identifier')
    # ### end Alembic commands ###